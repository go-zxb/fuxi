package repo

import (
	"{{.ModuleName}}/internal/model/sysUser"
	"{{.ModuleName}}/internal/model/sysUser/query"
	service "{{.ModuleName}}/internal/service/sysUser"
)

type SysUserRepo struct {
	Q *query.Query
}

func NewSysUserRepo() service.SysUserRepoInterface {
	return &SysUserRepo{Q: query.Q}
}

// GetUserInfo sysUser
func (r *SysUserRepo) GetUserInfo(sysUser *model.SysUserQuery) (*model.SysUser, error) {
	Q := r.Q.SysUser
	q := Q.Where(Q.UserName.Eq(sysUser.UserName))
	return q.First()
}

func (r *SysUserRepo) Login(sysUser *model.Login) (*model.SysUser, error) {
	Q := r.Q.SysUser
	q := Q.Where(Q.UserName.Eq(sysUser.UserName))
	return q.First()
}

func (r *SysUserRepo) Register(sysUser *model.SysUser) error {
	return r.Q.SysUser.Create(sysUser)
}
