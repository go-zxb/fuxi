package router

import (
	"github.com/gin-gonic/gin"
	api "{{.ModuleName}}/internal/api/sysUser"
	repo "{{.ModuleName}}/internal/repo/sysUser"
	service "{{.ModuleName}}/internal/service/sysUser"
	"{{.ModuleName}}/middleware"
)

type SysUserApiInterface interface {
	GetUserInfo(ctx *gin.Context)
	Login(ctx *gin.Context)
	Register(ctx *gin.Context)
}

type SysUserRouter struct {
	engine *gin.Engine
	api    SysUserApiInterface
}

func NewSysUserRouter(engine *gin.Engine) *SysUserRouter {
	return &SysUserRouter{
		engine: engine,
		api:    api.NewSysUserApi(service.NewSysUserService(repo.NewSysUserRepo())),
	}
}

// InitSysUserRouter 初始化SysUser路由
func (r *SysUserRouter) InitSysUserRouter() {
	{
		// v1
		sysUserV1 := r.engine.Group("api/v1")
		authAPi := r.engine.Group("api/v1").Use(middleware.JwtAuth())
		authAPi.GET("/getuserinfo", r.api.GetUserInfo)
		sysUserV1.POST("/login", r.api.Login)
		sysUserV1.POST("/register", r.api.Register)

	}
}
